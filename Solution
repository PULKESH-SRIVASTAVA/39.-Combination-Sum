class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
     List<List<Integer>> list=new ArrayList();
        if(candidates==null || candidates.length==0)return list; 
        List<Integer> lis=new ArrayList();
        Arrays.sort(candidates);
        csm(list,lis,target,0,candidates);
        return list;
}
    public void csm(List<List<Integer>> list,List<Integer> lis,int target,int index,int[] candidates){
        if(target==0){
            list.add(new ArrayList(lis));
            return;
        }
        for(int i=index;i<candidates.length;i++){
            if(candidates[i]<=target){
                lis.add(candidates[i]);
                csm(list,lis,target-candidates[i],i,candidates);
                lis.remove(lis.size()-1);
            }
        }
    }
}
